{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["/**\n * 网络请求工具函数\n */\n\nconst BASE_URL = 'https://api.example.com/v1';\n\n/**\n * HTTP请求封装\n * @param {Object} options - 请求选项\n * @returns {Promise} Promise对象\n */\nconst request = (options) => {\n  return new Promise((resolve, reject) => {\n    const token = uni.getStorageSync('token');\n\n    const defaultOptions = {\n      url: options.url,\n      method: options.method || 'GET',\n      data: options.data,\n      header: {\n        'Content-Type': 'application/json',\n        ...options.header\n      },\n      success: (res) => {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          resolve(res.data);\n        } else if (res.statusCode === 401) {\n          // 处理未授权的情况\n          uni.removeStorageSync('token');\n          uni.showToast({\n            title: '登录已过期，请重新登录',\n            icon: 'none',\n            duration: 2000\n          });\n\n          setTimeout(() => {\n            uni.redirectTo({\n              url: '/pages/login/index'\n            });\n          }, 1500);\n\n          reject({ message: '登录已过期，请重新登录' });\n        } else {\n          const errorMsg = res.data?.message || '请求失败';\n          uni.showToast({\n            title: errorMsg,\n            icon: 'none',\n            duration: 2000\n          });\n          reject({ message: errorMsg, statusCode: res.statusCode });\n        }\n      },\n      fail: (err) => {\n        const errorMsg = err.errMsg || '网络异常，请稍后再试';\n        uni.showToast({\n          title: errorMsg,\n          icon: 'none',\n          duration: 2000\n        });\n        reject({ message: errorMsg, error: err });\n      }\n    };\n\n    // 添加token到请求头\n    if (token) {\n      defaultOptions.header.Authorization = `Bearer ${token}`;\n    }\n\n    // 拼接完整URL\n    defaultOptions.url = options.url.startsWith('http')\n      ? options.url\n      : BASE_URL + options.url;\n\n    uni.request(defaultOptions);\n  });\n};\n\n/**\n * GET请求\n * @param {string} url - 请求地址\n * @param {Object} data - 请求参数\n * @param {Object} header - 请求头\n * @returns {Promise}\n */\nexport const get = (url, data = {}, header = {}) => {\n  return request({ url, method: 'GET', data, header });\n};\n\n/**\n * POST请求\n * @param {string} url - 请求地址\n * @param {Object} data - 请求参数\n * @param {Object} header - 请求头\n * @returns {Promise}\n */\nexport const post = (url, data = {}, header = {}) => {\n  return request({ url, method: 'POST', data, header });\n};\n\n/**\n * PUT请求\n * @param {string} url - 请求地址\n * @param {Object} data - 请求参数\n * @param {Object} header - 请求头\n * @returns {Promise}\n */\nexport const put = (url, data = {}, header = {}) => {\n  return request({ url, method: 'PUT', data, header });\n};\n\n/**\n * DELETE请求\n * @param {string} url - 请求地址\n * @param {Object} data - 请求参数\n * @param {Object} header - 请求头\n * @returns {Promise}\n */\nexport const del = (url, data = {}, header = {}) => {\n  return request({ url, method: 'DELETE', data, header });\n};\n\n/**\n * 上传文件\n * @param {string} url - 上传地址\n * @param {string} filePath - 文件路径\n * @param {string} name - 文件对应的 key\n * @param {Object} formData - 附加的表单数据\n * @returns {Promise}\n */\nexport const upload = (url, filePath, name = 'file', formData = {}) => {\n  return new Promise((resolve, reject) => {\n    const token = uni.getStorageSync('token');\n\n    uni.uploadFile({\n      url: url.startsWith('http') ? url : BASE_URL + url,\n      filePath,\n      name,\n      formData,\n      header: {\n        Authorization: token ? `Bearer ${token}` : ''\n      },\n      success: (res) => {\n        if (res.statusCode === 200) {\n          let data;\n          try {\n            data = JSON.parse(res.data);\n            resolve(data);\n          } catch (e) {\n            resolve(res.data);\n          }\n        } else {\n          const errorMsg = '上传失败';\n          uni.showToast({\n            title: errorMsg,\n            icon: 'none'\n          });\n          reject({ message: errorMsg, statusCode: res.statusCode });\n        }\n      },\n      fail: (err) => {\n        const errorMsg = err.errMsg || '网络异常，上传失败';\n        uni.showToast({\n          title: errorMsg,\n          icon: 'none'\n        });\n        reject({ message: errorMsg, error: err });\n      }\n    });\n  });\n};\n\n/**\n * 下载文件\n * @param {string} url - 下载地址\n * @returns {Promise}\n */\nexport const download = (url) => {\n  return new Promise((resolve, reject) => {\n    const token = uni.getStorageSync('token');\n\n    uni.downloadFile({\n      url: url.startsWith('http') ? url : BASE_URL + url,\n      header: {\n        Authorization: token ? `Bearer ${token}` : ''\n      },\n      success: (res) => {\n        if (res.statusCode === 200) {\n          resolve(res.tempFilePath);\n        } else {\n          const errorMsg = '下载失败';\n          uni.showToast({\n            title: errorMsg,\n            icon: 'none'\n          });\n          reject({ message: errorMsg, statusCode: res.statusCode });\n        }\n      },\n      fail: (err) => {\n        const errorMsg = err.errMsg || '网络异常，下载失败';\n        uni.showToast({\n          title: errorMsg,\n          icon: 'none'\n        });\n        reject({ message: errorMsg, error: err });\n      }\n    });\n  });\n};\n\nexport default {\n  request,\n  get,\n  post,\n  put,\n  delete: del,\n  upload,\n  download\n}; "],"names":["uni"],"mappings":";;AAIA,MAAM,WAAW;AAOjB,MAAM,UAAU,CAAC,YAAY;AAC3B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AAExC,UAAM,iBAAiB;AAAA,MACrB,KAAK,QAAQ;AAAA,MACb,QAAQ,QAAQ,UAAU;AAAA,MAC1B,MAAM,QAAQ;AAAA,MACd,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,GAAG,QAAQ;AAAA,MACZ;AAAA,MACD,SAAS,CAAC,QAAQ;;AAChB,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,kBAAQ,IAAI,IAAI;AAAA,QAC1B,WAAmB,IAAI,eAAe,KAAK;AAEjCA,8BAAI,kBAAkB,OAAO;AAC7BA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,YACN,UAAU;AAAA,UACtB,CAAW;AAED,qBAAW,MAAM;AACfA,0BAAAA,MAAI,WAAW;AAAA,cACb,KAAK;AAAA,YACnB,CAAa;AAAA,UACF,GAAE,IAAI;AAEP,iBAAO,EAAE,SAAS,cAAa,CAAE;AAAA,QAC3C,OAAe;AACL,gBAAM,aAAW,SAAI,SAAJ,mBAAU,YAAW;AACtCA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,YACN,UAAU;AAAA,UACtB,CAAW;AACD,iBAAO,EAAE,SAAS,UAAU,YAAY,IAAI,WAAU,CAAE;AAAA,QACzD;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,cAAM,WAAW,IAAI,UAAU;AAC/BA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU;AAAA,QACpB,CAAS;AACD,eAAO,EAAE,SAAS,UAAU,OAAO,IAAK,CAAA;AAAA,MACzC;AAAA,IACP;AAGI,QAAI,OAAO;AACT,qBAAe,OAAO,gBAAgB,UAAU,KAAK;AAAA,IACtD;AAGD,mBAAe,MAAM,QAAQ,IAAI,WAAW,MAAM,IAC9C,QAAQ,MACR,WAAW,QAAQ;AAEvBA,wBAAI,QAAQ,cAAc;AAAA,EAC9B,CAAG;AACH;AASY,MAAC,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,SAAS,CAAA,MAAO;AAClD,SAAO,QAAQ,EAAE,KAAK,QAAQ,OAAO,MAAM,OAAM,CAAE;AACrD;AASY,MAAC,OAAO,CAAC,KAAK,OAAO,CAAA,GAAI,SAAS,CAAA,MAAO;AACnD,SAAO,QAAQ,EAAE,KAAK,QAAQ,QAAQ,MAAM,OAAM,CAAE;AACtD;AASY,MAAC,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,SAAS,CAAA,MAAO;AAClD,SAAO,QAAQ,EAAE,KAAK,QAAQ,OAAO,MAAM,OAAM,CAAE;AACrD;;;;"}