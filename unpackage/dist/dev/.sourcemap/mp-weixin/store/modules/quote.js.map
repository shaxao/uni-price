{"version":3,"file":"quote.js","sources":["store/modules/quote.js"],"sourcesContent":["import { get, post, put } from '../../utils/request'\r\n\r\n// 报价模块\r\nconst state = {\r\n  quotes: [],\r\n  currentQuote: null,\r\n  myQuotes: [],\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst mutations = {\r\n  SET_QUOTES(state, quotes) {\r\n    state.quotes = quotes\r\n  },\r\n  SET_CURRENT_QUOTE(state, quote) {\r\n    state.currentQuote = quote\r\n  },\r\n  SET_MY_QUOTES(state, quotes) {\r\n    state.myQuotes = quotes\r\n  },\r\n  ADD_QUOTE(state, quote) {\r\n    state.myQuotes.unshift(quote)\r\n  },\r\n  UPDATE_QUOTE(state, { quoteId, data }) {\r\n    const index = state.myQuotes.findIndex(q => q.quote_id === quoteId)\r\n    if (index !== -1) {\r\n      state.myQuotes[index] = { ...state.myQuotes[index], ...data }\r\n    }\r\n  },\r\n  SET_LOADING(state, status) {\r\n    state.loading = status\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 获取某个产品的所有报价\r\n  async fetchQuotes({ commit }, productId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await get(`/quotes?product_id=${productId}`)\r\n      commit('SET_QUOTES', response.data || [])\r\n      return response.data\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 获取特定报价详情\r\n  async fetchQuoteDetail({ commit }, quoteId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await get(`/quotes/${quoteId}`)\r\n      commit('SET_CURRENT_QUOTE', response.data)\r\n      return response.data\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 获取我的报价列表\r\n  async fetchMyQuotes({ commit }) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await get('/quotes?self=1')\r\n      commit('SET_MY_QUOTES', response.data || [])\r\n      return response.data\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      throw error\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 提交新报价\r\n  async submitQuote({ commit }, quoteData) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await post('/quotes', quoteData)\r\n      commit('ADD_QUOTE', response.data)\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      return {\r\n        success: false,\r\n        message: error.message || '提交报价失败'\r\n      }\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 更新报价\r\n  async updateQuote({ commit }, { quoteId, data }) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await put(`/quotes/${quoteId}`, data)\r\n      commit('UPDATE_QUOTE', { quoteId, data: response.data })\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      return {\r\n        success: false,\r\n        message: error.message || '更新报价失败'\r\n      }\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  },\r\n\r\n  // 取消报价\r\n  async cancelQuote({ commit }, quoteId) {\r\n    commit('SET_LOADING', true)\r\n    try {\r\n      const response = await put(`/quotes/${quoteId}/cancel`, {})\r\n      commit('UPDATE_QUOTE', {\r\n        quoteId,\r\n        data: { status: 'cancelled' }\r\n      })\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message)\r\n      return {\r\n        success: false,\r\n        message: error.message || '取消报价失败'\r\n      }\r\n    } finally {\r\n      commit('SET_LOADING', false)\r\n    }\r\n  }\r\n}\r\n\r\nconst getters = {\r\n  pendingQuotes: state => state.myQuotes.filter(quote => quote.status === 'pending'),\r\n  approvedQuotes: state => state.myQuotes.filter(quote => quote.status === 'approved'),\r\n  rejectedQuotes: state => state.myQuotes.filter(quote => quote.status === 'rejected')\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n} "],"names":["state","quote","get","post","put"],"mappings":"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"}