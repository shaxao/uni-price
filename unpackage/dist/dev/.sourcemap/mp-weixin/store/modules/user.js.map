{"version":3,"file":"user.js","sources":["store/modules/user.js"],"sourcesContent":["import { get, post, put } from '../../utils/request'\n\n// 用户模块\nconst state = {\n  userInfo: null,\n  token: null,\n  loading: false,\n  error: null,\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst mutations = {\n  SET_USER_INFO(state, userInfo) {\n    state.userInfo = userInfo\n    state.isLoggedIn = !!userInfo\n    state.isAdmin = userInfo ? userInfo.role === 'admin' : false\n  },\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_LOADING(state, status) {\n    state.loading = status\n  },\n  SET_ERROR(state, error) {\n    state.error = error\n  },\n  CLEAR_USER(state) {\n    state.userInfo = null\n    state.token = null\n    state.isLoggedIn = false\n    state.isAdmin = false\n  }\n}\n\nconst actions = {\n  // 用户登录\n  async login({ commit }, { username, password }) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await post('/auth/login', { username, password })\n\n      if (response.success) {\n        const { token, user } = response.data\n\n        // 存储token到本地存储\n        uni.setStorageSync('token', token)\n\n        commit('SET_TOKEN', token)\n        commit('SET_USER_INFO', user)\n\n        return {\n          success: true,\n          data: user\n        }\n      } else {\n        commit('SET_ERROR', response.message || '登录失败')\n        return {\n          success: false,\n          message: response.message || '登录失败'\n        }\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      return {\n        success: false,\n        message: error.message || '登录失败'\n      }\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 用户注册\n  async register({ commit }, userData) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await post('/auth/register', userData)\n\n      return {\n        success: response.success,\n        message: response.message,\n        data: response.data\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      return {\n        success: false,\n        message: error.message || '注册失败'\n      }\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 重置密码\n  async resetPassword({ commit }, { email }) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await post('/auth/reset-password', { email })\n\n      return {\n        success: response.success,\n        message: response.message\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      return {\n        success: false,\n        message: error.message || '重置密码失败'\n      }\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 获取用户信息\n  async fetchUserInfo({ commit, state }) {\n    // 如果已经有用户信息，直接返回\n    if (state.userInfo) {\n      return {\n        success: true,\n        data: state.userInfo\n      }\n    }\n\n    // 检查本地存储中是否有token\n    const token = state.token || uni.getStorageSync('token')\n    if (!token) {\n      return {\n        success: false,\n        message: '未登录'\n      }\n    }\n\n    commit('SET_TOKEN', token)\n    commit('SET_LOADING', true)\n\n    try {\n      const response = await get('/user/info')\n\n      if (response.success) {\n        commit('SET_USER_INFO', response.data)\n        return {\n          success: true,\n          data: response.data\n        }\n      } else {\n        commit('CLEAR_USER')\n        uni.removeStorageSync('token')\n        return {\n          success: false,\n          message: response.message || '获取用户信息失败'\n        }\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n\n      // 如果是401错误，清除本地token\n      if (error.statusCode === 401) {\n        commit('CLEAR_USER')\n        uni.removeStorageSync('token')\n      }\n\n      return {\n        success: false,\n        message: error.message || '获取用户信息失败'\n      }\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 更新用户信息\n  async updateUserInfo({ commit }, userData) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await put('/user/info', userData)\n\n      if (response.success) {\n        commit('SET_USER_INFO', response.data)\n        return {\n          success: true,\n          data: response.data\n        }\n      } else {\n        return {\n          success: false,\n          message: response.message || '更新用户信息失败'\n        }\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      return {\n        success: false,\n        message: error.message || '更新用户信息失败'\n      }\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 登出\n  logout({ commit }) {\n    commit('CLEAR_USER')\n    uni.removeStorageSync('token')\n    return {\n      success: true,\n      message: '已退出登录'\n    }\n  }\n}\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  isAdmin: state => state.isAdmin,\n  userRole: state => state.userInfo ? state.userInfo.role : null\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n} "],"names":["state","post","user","uni","get","put"],"mappings":"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"}